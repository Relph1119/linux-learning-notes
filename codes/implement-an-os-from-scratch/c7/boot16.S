.text
.code16
start16:
    # 清除标志寄存器中的中断位
    cli

    # 加载段描述符表地址到寄存器GDTR
    lgdt gdtr

    # 开启处理器的保护模式，CR0寄存器的第0位PE用于控制处理器是否开启保护模式
    mov %cr0, %eax
    # 将CR0的最后一位置为1，即开启保护模式
    or $0x1, %eax
    mov %eax, %cr0

    # 段选择子是0x8（段索引是1，使用全局段描述符表TI是0，特权级是00，即0000000000001000）
    # 保护模式的入口地址是0x20000，段基址为0，所以段内偏移地址为0x20000
    # 长跳转指令ljmpl [段选择子] [段内偏移地址]
    ljmpl $0x8, $0x20000

gdt:
    # 段描述符表的第0项保留不用
    .quad 0x0000000000000000
    # 第1项定义内核代码段
    .quad 0x00c09a00000007ff
    # 第2项定义内核数据段
    .quad 0x00c09200000007ff
gdt_end:

gdtr:
    # 低16位对应段描述符表的长度
    .word gdt_end - gdt
    # 高16位对应段描述符表的地址（0x1000<<4 + gdt）
    .word gdt, 0x1
